# Wikibase with Query Service
#
# This docker-compose example can be used to pull the images from docker hub.
#
# Examples:
#
version: '3'

services:
  mysql_db:
    image: mysql:5.7
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "1z3rt1s"
      MYSQL_USER: "hercules"
      MYSQL_PASSWORD: "h3rcul3s"
      MYSQL_DATABASE: "wikibase"
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
    entrypoint:
      sh -c "
        echo 'CREATE DATABASE IF NOT EXISTS management;' > /docker-entrypoint-initdb.d/init.sql;
        /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"
    networks:
      default:
        aliases:
          - mysql.svc
  mongo_db:
    image: mongo:latest
    restart: unless-stopped
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '27017:27017'
    networks:
      default:
        aliases:
          - mongo.svc
  elasticsearch:
    image: wikibase/elasticsearch:5.6.14-extra
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      'http.host': '0.0.0.0'
      'transport.host': 'localhost'
      'network.host': '0.0.0.0'
      'discovery.type': 'single-node'
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
    - 9200:9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      default:
        aliases:
          - elasticsearch.svc
  # wikibase
  wikibase: # Wikibase
    image: wikibase/wikibase:1.33-bundle
    links:
      - mysql_db
    ports:
      # CONFIG - Change the 8181 here to expose Wikibase & MediaWiki on a different port
      - "8181:80"
    expose:
      - 8181
    volumes:
      - mediawiki-images-data:/var/www/html/images
      - quickstatements-data:/quickstatements/data
    depends_on:
      - mysql_db
      - elasticsearch
    restart: unless-stopped
    networks:
      default:
        aliases:
          - wikibase.svc
          # CONFIG - Add your real wikibase hostname here, for example wikibase-registry.wmflabs.org
    environment:
      - DB_SERVER=mysql.svc:3306
      - MW_ELASTIC_HOST=elasticsearch.svc
      - MW_ELASTIC_PORT=9200
      # CONFIG - Change the default values below
      - MW_ADMIN_NAME=WikibaseAdmin
      - MW_ADMIN_PASS=WikibaseAdminPass
      - MW_ADMIN_EMAIL=admin@example.com
      - MW_WG_SECRET_KEY=secretkey
      # CONFIG - Change the default values below (should match mysql values in this file)
      - DB_USER=hercules
      - DB_PASS=h3rcul3s
      - DB_NAME=wikibase
      - QS_PUBLIC_SCHEME_HOST_AND_PORT=http://localhost:9191
  wdqs: # wikibase
    image: wikibase/wdqs:0.3.10
    restart: unless-stopped
    volumes:
      - query-service-data:/wdqs/data
    command: /runBlazegraph.sh
    environment:
      - WIKIBASE_HOST=wikibase.svc
      - WDQS_HOST=wdqs.svc
      - WDQS_PORT=9999
    expose:
      - 9999
    networks:
      default:
        aliases:
          - wdqs.svc
  wdqs-proxy: # Proxy to put infront of the wdqs image enforcing READONLY requests query timeouts
    image: wikibase/wdqs-proxy
    restart: unless-stopped
    environment:
      - PROXY_PASS_HOST=wdqs.svc:9999
    ports:
      - "8989:80"
    depends_on:
      - wdqs
    networks:
      default:
        aliases:
          - wdqs-proxy.svc
  wdqs-updater:
    image: wikibase/wdqs:0.3.10
    restart: unless-stopped
    command: /runUpdate.sh
    depends_on:
      - wdqs
      - wikibase
    networks:
      default:
        aliases:
          - wdqs-updater.svc
    environment:
      - WIKIBASE_HOST=wikibase.svc
      - WDQS_HOST=wdqs.svc
      - WDQS_PORT=9999
  quickstatements:
    image: wikibase/quickstatements:latest
    ports:
      - "9191:80"
    depends_on:
      - wikibase
    volumes:
      - quickstatements-data:/quickstatements/data
    networks:
      default:
        aliases:
          - quickstatements.svc
    environment:
      - QS_PUBLIC_SCHEME_HOST_AND_PORT=http://localhost:9191
      - WB_PUBLIC_SCHEME_HOST_AND_PORT=http://localhost:8181
      - WIKIBASE_SCHEME_AND_HOST=http://wikibase.svc
      - WB_PROPERTY_NAMESPACE=122
      - "WB_PROPERTY_PREFIX=Property:"
      - WB_ITEM_NAMESPACE=120
      - "WB_ITEM_PREFIX=Item:"
  # kafka
  zookeeper:
    image: bitnami/zookeeper:3.5.6
    ports:
      - 2181:2181
    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka:2.4.0
    ports:
      - 9092:9092
      - 29092:29092
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://155.54.239.209:29092
     #  - KAFKA_CREATE_TOPICS: input-data:1:1,general-data:1:1,success-data:1:1,management-system-data:1:1
    depends_on:
      - zookeeper
#    onrun:
#      sh -c "
#        ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic input-data;
#        ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic general-data;
#        ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic success-data;
#        ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic management-system-data;"


    #RUN ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic input-data
    #RUN ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic general-data
    #RUN ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic success-data
    #RUN ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic management-system-data

  # graylog
  graylog:
    image: graylog/graylog:3.1
    environment:
      GRAYLOG_PASSWORD_SECRET: 1z3rt1sH3rcul3s?
      GRAYLOG_ROOT_PASSWORD_SHA2: d094d2fbb2c507c4ffe3c0073568e83f89c9993af7003efa94d93d77
      GRAYLOG_HTTP_EXTERNAL_URI: http://127.0.0.1:9000/
    links:
      - mongo_db:mongo
      - elasticsearch
    depends_on:
      - mongo_db
      - elasticsearch
    ports:
      # Graylog web interface and REST API
      - 9000:9000
      # Syslog TCP
      - 1514:1514
      # Syslog UDP
      - 1514:1514/udp
      # GELF TCP
      - 12201:12201
      # GELF UDP
      - 12201:12201/udp
volumes:
  mysql-data:
  mongo-data:
  mongo-config:
  elasticsearch-data:
  mediawiki-images-data:
  quickstatements-data:
  query-service-data:
  zookeeper_data:
  kafka_data:

#onrun:
#  command: sh -c "
#      ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic input-data;
#      ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic general-data;
#      ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic success-data;
#      ./opt/bitnami/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic management-system-data;"